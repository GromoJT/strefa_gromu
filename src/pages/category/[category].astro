---
// @ts-nocheck
import { getCollection , type CollectionEntry } from "astro:content";
import MainLayout from '../../layouts/MainPageLayout.astro';
import {slugify,formatBlogPosts} from "../../js/utils";

import PostCard from '../../components/PostCard.astro';

interface Post {
  data: {
    category: string,
  };
 
}

import type { GetStaticPaths } from "astro";
export const getStaticPaths = (() => {
    
    return [
        {
            params:{category: slugify("Za kulisami")},
            props:{name:"Za kulisami"},
        },
		{
            params:{category: slugify("DIY")},
            props:{name:"DIY"},
        },
		{
            params:{category: slugify("Unity")},
            props:{name:"Unity"},
        },
		{
            params:{category: slugify("Godot")},
            props:{name:"Godot"},
        },


    ];
}) satisfies GetStaticPaths;

const { category } = Astro.params;
const { name } = Astro.props;

const allBlogPosts = await getCollection("blog");
const formattedBlogPosts:CollectionEntry<"blog">[]  = formatBlogPosts(allBlogPosts,{
});

const allGameDevPosts = await getCollection("gameDev");
const formattedGameDevPosts:CollectionEntry<"gameDev">[] = formatBlogPosts(allGameDevPosts,{
});


const catPosts = [...formattedBlogPosts, ...formattedGameDevPosts]
    .filter((post: Post) => slugify(post.data.category)  === category);



---
<MainLayout title={name}>
	<section class="container" aria-label={`Posty o ${name}`}>
		<h1 class="h1">Posty o <span>{name}</span></h1>
		<div class="post-container">
			{
				catPosts.map((post) => 
				<PostCard 
					data={post.data} 
					url={post.slug} 
					tagType="h2"
				/> 
				)
			}
		</div>
	</section>
	<!-- <PostCard data={allPosts[0].data} url={allPosts[0].url} tagType="h2"/> -->


</MainLayout>